package models

import "database/sql"

// GENERATED BY XO. DO NOT EDIT.

type MessageParamOption struct {
	RoomID          int
	Limit           int
	Offset          int
	OrderByPostDate bool
}

// MessagesByOption retrieves a row from 'goa_chat.messages' as a Message.
func MessagesByOption(db XODB, option MessageParamOption) ([]*Message, error) {
	var err error

	// sql query
	var sqlstr = `SELECT ` +
		`id, room_id, account_id, body, postDate ` +
		`FROM goa_chat.messages ` +
		`WHERE room_id = ? `

	var q *sql.Rows

	if option.OrderByPostDate {
		sqlstr += `ORDER BY postDate DESC `
	}

	// run query
	if option.Limit > 0 {
		sqlstr += `LIMIT ? OFFSET ? `
		XOLog(sqlstr, option.RoomID, option.Offset, option.Limit)
		q, err = db.Query(sqlstr, option.RoomID, option.Limit, option.Offset)
		if err != nil {
			return nil, err
		}
		defer q.Close()
	} else {
		sqlstr += `OFFSET ? `
		XOLog(sqlstr, option.RoomID)
		q, err := db.Query(sqlstr, option.RoomID, option.Offset)
		if err != nil {
			return nil, err
		}
		defer q.Close()
	}

	// load results
	res := []*Message{}
	for q.Next() {
		m := Message{
			_exists: true,
		}

		// scan
		err = q.Scan(&m.ID, &m.RoomID, &m.AccountID, &m.Body, &m.Postdate)
		if err != nil {
			return nil, err
		}

		res = append(res, &m)
	}

	return res, nil
}
