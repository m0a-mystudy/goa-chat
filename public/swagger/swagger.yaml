consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Account:
    description: A account (default view)
    example:
      created: 2002-07-08T14:47:02+09:00
      id: Dolor maxime deleniti.
      password: Culpa sequi aut quibusdam praesentium ut.
    properties:
      created:
        description: Date of creation
        example: 2002-07-08T14:47:02+09:00
        format: date-time
        type: string
      id:
        description: ID of room
        example: Dolor maxime deleniti.
        type: string
      password:
        example: Culpa sequi aut quibusdam praesentium ut.
        type: string
    required:
    - id
    - password
    - created
    title: 'Mediatype identifier: application/vnd.account+json; view=default'
    type: object
  AccountCollection:
    description: AccountCollection is the media type for an array of Account (default
      view)
    example:
    - created: 2002-07-08T14:47:02+09:00
      id: Dolor maxime deleniti.
      password: Culpa sequi aut quibusdam praesentium ut.
    items:
      $ref: '#/definitions/Account'
    title: 'Mediatype identifier: application/vnd.account+json; type=collection; view=default'
    type: array
  Message:
    description: A Message (default view)
    example:
      body: this is chat message
      googleUserID: "12345678"
      postDate: 1973-10-13T08:06:32+09:00
    properties:
      body:
        example: this is chat message
        maxLength: 400
        minLength: 1
        type: string
      googleUserID:
        example: "12345678"
        type: string
      postDate:
        default: 1978-06-30T10:00:00+09:00
        example: 1973-10-13T08:06:32+09:00
        format: date-time
        type: string
    required:
    - googleUserID
    - body
    - postDate
    title: 'Mediatype identifier: application/vnd.message+json; view=default'
    type: object
  Message_with_account:
    description: A Message with account (default view)
    example:
      body: Odit error.
      email: Eius qui.
      googleUserID: Est voluptatibus saepe.
      id: 4.812766e+18
      image: Omnis et.
      name: Nisi expedita.
      postDate: 1982-07-23T01:49:31+09:00
    properties:
      body:
        example: Odit error.
        type: string
      email:
        example: Eius qui.
        type: string
      googleUserID:
        example: Est voluptatibus saepe.
        type: string
      id:
        example: 4.812766e+18
        format: int64
        type: integer
      image:
        example: Omnis et.
        type: string
      name:
        example: Nisi expedita.
        type: string
      postDate:
        example: 1982-07-23T01:49:31+09:00
        format: date-time
        type: string
    title: 'Mediatype identifier: application/vnd.message_with_account+json; view=default'
    type: object
  Message_with_accountCollection:
    description: Message_with_accountCollection is the media type for an array of
      Message_with_account (default view)
    example:
    - body: Odit error.
      email: Eius qui.
      googleUserID: Est voluptatibus saepe.
      id: 4.812766e+18
      image: Omnis et.
      name: Nisi expedita.
      postDate: 1982-07-23T01:49:31+09:00
    items:
      $ref: '#/definitions/Message_with_account'
    title: 'Mediatype identifier: application/vnd.message_with_account+json; type=collection;
      view=default'
    type: array
  MessagePayload:
    example:
      body: this is chat message
      googleUserID: "12345678"
      postDate: 1978-09-18T20:35:11+09:00
    properties:
      body:
        example: this is chat message
        maxLength: 400
        minLength: 1
        type: string
      googleUserID:
        example: "12345678"
        type: string
      postDate:
        default: 1978-06-30T10:00:00+09:00
        example: 1978-09-18T20:35:11+09:00
        format: date-time
        type: string
    required:
    - body
    - postDate
    title: MessagePayload
    type: object
  Room:
    description: A room (default view)
    example:
      created: 2014-08-14T02:16:08+09:00
      description: room description
      id: 2.4780884e+18
      name: room001
    properties:
      created:
        description: Date of creation
        example: 2014-08-14T02:16:08+09:00
        format: date-time
        type: string
      description:
        description: description of room
        example: room description
        maxLength: 400
        type: string
      id:
        description: ID of room
        example: 2.4780884e+18
        format: int64
        type: integer
      name:
        description: Name of room
        example: room001
        type: string
    required:
    - name
    - description
    title: 'Mediatype identifier: application/vnd.room+json; view=default'
    type: object
  RoomCollection:
    description: RoomCollection is the media type for an array of Room (default view)
    example:
    - created: 2014-08-14T02:16:08+09:00
      description: room description
      id: 2.4780884e+18
      name: room001
    - created: 2014-08-14T02:16:08+09:00
      description: room description
      id: 2.4780884e+18
      name: room001
    - created: 2014-08-14T02:16:08+09:00
      description: room description
      id: 2.4780884e+18
      name: room001
    items:
      $ref: '#/definitions/Room'
    title: 'Mediatype identifier: application/vnd.room+json; type=collection; view=default'
    type: array
  RoomPayload:
    example:
      created: 1988-07-20T23:26:33+09:00
      description: room description
      id: 6.0919464e+18
      name: room001
    properties:
      created:
        description: Date of creation
        example: 1988-07-20T23:26:33+09:00
        format: date-time
        type: string
      description:
        description: description of room
        example: room description
        maxLength: 400
        type: string
      id:
        description: ID of room
        example: 6.0919464e+18
        format: int64
        type: integer
      name:
        description: Name of room
        example: room001
        type: string
    required:
    - name
    - description
    title: RoomPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: localhost:8080
info:
  description: goa study chat api
  title: goa study chat
  version: ""
paths:
  /:
    get:
      operationId: serve#/
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download ./goa-chat-client/build/index.html
  /api/accounts:
    get:
      description: Retrieve all accunts.
      operationId: account#list
      produces:
      - application/vnd.account+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountCollection'
        "404":
          description: Not Found
      schemes:
      - http
      summary: list account
      tags:
      - account
    post:
      description: Create new account
      operationId: account#post
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/MessagePayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/accounts/[0-9]+$
              type: string
        "400":
          description: Bad Request
      schemes:
      - http
      summary: post account
      tags:
      - account
  /api/accounts/{user}:
    get:
      description: Retrieve account with given id or something
      operationId: account#show
      parameters:
      - in: path
        name: user
        required: true
        type: string
      produces:
      - application/vnd.goa.error
      - application/vnd.account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show account
      tags:
      - account
  /api/rooms:
    get:
      description: Retrieve all rooms.
      operationId: room#list
      parameters:
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer
      produces:
      - application/vnd.room+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RoomCollection'
        "404":
          description: Not Found
      schemes:
      - http
      summary: list room
      tags:
      - room
    post:
      description: |-
        Create new Room

        Required security scopes:
          * `api:access`
      operationId: room#post
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RoomPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /rooms/[0-9]+
              type: string
        "400":
          description: Bad Request
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: post room
      tags:
      - room
  /api/rooms/{roomID}:
    get:
      description: Retrieve room with given id
      operationId: room#show
      parameters:
      - in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.room+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show room
      tags:
      - room
  /api/rooms/{roomID}/messages:
    get:
      description: Retrieve all messages.
      operationId: message#list
      parameters:
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer
      - in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/vnd.message_with_account+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message_with_accountCollection'
        "404":
          description: Not Found
      schemes:
      - http
      summary: list message
      tags:
      - message
    post:
      description: |-
        Create new message

        Required security scopes:
          * `api:access`
      operationId: message#post
      parameters:
      - in: path
        name: roomID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/MessagePayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/rooms/[0-9]+/messages/[0-9]+$
              type: string
        "400":
          description: Bad Request
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: post message
      tags:
      - message
  /api/rooms/{roomID}/messages/{messageID}:
    get:
      description: Retrieve message with given id
      operationId: message#show
      parameters:
      - in: path
        name: messageID
        required: true
        type: integer
      - in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/vnd.message+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show message
      tags:
      - message
  /api/rooms/{roomID}/watch:
    get:
      description: Retrieve room with given id
      operationId: room#watch
      parameters:
      - in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "101":
          description: Switching Protocols
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - ws
      summary: watch room
      tags:
      - room
  /static/{filepath}:
    get:
      operationId: serve#/static/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: Download ./goa-chat-client/build/static
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  BadRequest:
    description: Bad Request
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/Account'
  SwitchingProtocols:
    description: Switching Protocols
schemes:
- http
securityDefinitions:
  basic_auth:
    type: basic
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
